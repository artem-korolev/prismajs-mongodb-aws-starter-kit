# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

concurrency: PROD_environment

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
        # lerna and semantic-release requires `all_commits` and `all_tags` for proper functioning
        with:
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: git config --global user.email "artkor@live.ru"
      - run: git config --global user.name "GitHub Actions"
      # pulls all tags (needed for lerna / semantic release to correctly version)
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - run: npm ci
      - run: npx lerna bootstrap
      - run: npx lerna run build
      - run: npx lerna publish --yes
      - run: npx semantic-release
      - run: npx lerna run deploy
    env:
      # GitHub access to repo
      GH_TOKEN: ${{secrets.REPO_TOKEN}}
      # AWS access keys
      AWS_ACCESS_KEY_ID: ${{secrets.PROD_AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.PROD_AWS_SECRET_ACCESS_KEY}}
      # Application environment specific secrets
      PROD_DATABASE_URL: ${{secrets.PROD_DATABASE_URL}}
